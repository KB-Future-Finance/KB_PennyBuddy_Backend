plugins {
    id 'java'
    id 'war'
}

group = 'com.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // junit
    testImplementation 'junit:junit:3.8.1'

    // spring
    implementation 'org.springframework:spring-context:4.3.18.RELEASE'
    implementation 'org.springframework:spring-beans:4.3.18.RELEASE'
    implementation 'org.springframework:spring-core:4.3.18.RELEASE'
    implementation 'org.springframework:spring-aop:4.3.18.RELEASE'
    implementation 'org.springframework:spring-webmvc:4.3.18.RELEASE'
    implementation 'org.springframework:spring-web:4.3.18.RELEASE'

    // javax.servlet
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'javax.servlet.jsp.jstl:jstl-api:1.2'
    providedCompile 'javax.servlet.jsp:jsp-api:2.2'

    // cglib
    implementation 'cglib:cglib:2.2.2'

    // database
    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'
    implementation 'org.springframework:spring-jdbc:4.3.18.RELEASE'
    implementation 'org.springframework:spring-tx:4.3.18.RELEASE'

    // dbcp2
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'

    // mysql, protobuf-java
    implementation 'com.mysql:mysql-connector-j:8.0.31'
    implementation 'com.google.protobuf:protobuf-java:3.19.4'

    // jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

    // logging
    implementation "org.slf4j:slf4j-api:1.6.6"
    runtimeOnly "org.slf4j:jcl-over-slf4j:1.6.6"
    runtimeOnly "org.slf4j:slf4j-log4j12:1.6.6"
    runtimeOnly("log4j:log4j:1.2.15") {
        exclude group: 'javax.mail', module: 'mail'
        exclude group: 'javax.jms', module: 'jms'
        exclude group: 'com.sun.jdmk', module: 'jmxtools'
        exclude group: 'com.sun.jmx', module: 'jmxri'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//war {
//    //archiveFileName = 'tempspring2.war'
//    from('src/main/webapp')
//}

task copyResources(type: Copy) {
    from("${projectDir}/vue-app/dist")
    into("${projectDir}/src/main/webapp/static")
}

tasks.named('processResources') {
    dependsOn(copyResources)
}
